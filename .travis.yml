# needed to run .travis-libcxx-setup.sh
sudo: required

matrix:
  include:
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      script: 
        - brew update          
        - cmake . -G Xcode
        - xcodebuild
        - cd Debug
        - ./UtilsTests
        
    - os: osx
      osx_image: xcode9
      compiler: clang
      script: 
        - brew update          
        - cmake . -G Xcode
        - xcodebuild
        - cd Debug
        - ./UtilsTests
        
    - os: osx
      osx_image: xcode9.1
      compiler: clang
      script: 
        - brew update          
        - cmake . -G Xcode
        - xcodebuild
        - cd Debug
        - ./UtilsTests
        
    - os: osx
      osx_image: xcode9.2
      compiler: clang
      script: 
        - brew update          
        - cmake . -G Xcode
        - xcodebuild
        - cd Debug
        - ./UtilsTests
        
    - os: osx
      osx_image: xcode9.3beta
      compiler: clang
      script: 
        - brew update          
        - cmake . -G Xcode
        - xcodebuild
        - cd Debug
        - ./UtilsTests

    # works on Precise and Trusty
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-5
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      script:
        - cmake . 
        - make
        - ./UtilsTests

    # works on Precise and Trusty
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      script:
        - cmake . 
        - make
        - ./UtilsTests

    # works on Precise and Trusty
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      script:
        - cmake . 
        - make
        - ./UtilsTests
  
    # works on Precise and Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"
      script:
        - cmake . 
        - make
        - ./UtilsTests

    # works on Precise and Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"
      script:
        - cmake .
        - make
        - ./UtilsTests

    # works on Precise and Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
        - LIBCXX_BUILD=1
        - EXTRA_FLAGS="-stdlib=libc++ -fno-omit-frame-pointer -g -O2 -fsanitize=undefined,address -fno-sanitize-recover=all"
      script:
        - cmake . 
        - make
        - ./UtilsTests


    # works on Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
        - LIBCXX_BUILD=1
        - CPPFLAGS="-stdlib=libc++"
      script:
        - cmake . 
        - make
        - ./UtilsTests

    # works on Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
      script:
        - cmake . 
        - make
        - ./UtilsTests

    # works on Trusty
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
      script:
        - cmake . 
        - make
        - ./UtilsTests

before_install:
    - eval "${MATRIX_EVAL}"

# need to build libc++ for clang 3.8 and 3.9
before_script:
  - if [ -n "${LIBCXX_BUILD}" ]; then
      source .travis-libcxx-setup.sh;
    fi
    
language:
  - cpp
